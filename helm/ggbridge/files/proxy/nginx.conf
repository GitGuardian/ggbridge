{{- $index := .index -}}
{{- $context := .context -}}
{{- $releaseNamespace := $context.Release.Namespace -}}
{{- $clusterDomain := $context.Values.clusterDomain -}}

{{- $fullname := "" -}}
{{- $ports := dict -}}
{{- if eq $context.Values.mode "server" -}}
    {{- $fullname = include "ggbridge.server.fullname" $context -}}
    {{- range $key, $value := $context.Values.server.tunnels -}}
        {{- if $value.enabled -}}
            {{- $_ := set $ports $key (get $context.Values.proxy.service.ports $key) }}
        {{- end -}}
    {{- end -}}
{{- else -}}
    {{- $fullname = include "ggbridge.client.fullname" $context -}}
    {{- range $key, $value := $context.Values.client.tunnels -}}
        {{- if $value.enabled -}}
            {{- $_ := set $ports $key (get $context.Values.proxy.service.ports $key) }}
        {{- end -}}
    {{- end -}}
{{- end -}}

load_module "/usr/lib/nginx/modules/ngx_stream_module.so";

worker_processes 1;

error_log  stderr  notice;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

stream {
    log_format main '$remote_addr [$time_local] '
                    '$protocol $status $bytes_sent $bytes_received '
                    '$session_time "$upstream_addr" '
                    '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log /dev/stdout main;

    resolver {{ printf "kube-dns.kube-system.svc.%s" $clusterDomain }} valid=30s;
    resolver_timeout 5s;

    {{ range $tunnel, $config := $ports }}
    upstream {{ $tunnel }} {
        {{- range $idx := until ($context.Values.deploymentCount | int) }}
          {{- $indexProxyFullname := printf "%s-proxy-%d" $fullname ($idx | int) }}
          {{- $weight := ternary 100 1 (eq $idx $index) }}
          {{ printf "server %s:%d weight=%d;" (printf "%s.%s.svc.%s" $indexProxyFullname $releaseNamespace $clusterDomain) ($config.port | int) $weight }}
        {{- end }}
    }
    {{ end }}

    {{ range $tunnel, $config := $ports }}
    server {
        listen {{ $config.containerPort }};
        proxy_pass {{ $tunnel }};
        proxy_timeout 600s;
        proxy_connect_timeout 5s;
    }
    {{ end }}
}
