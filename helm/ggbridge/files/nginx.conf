load_module "/usr/lib/nginx/modules/ngx_stream_module.so";

worker_processes 1;

error_log  stderr  notice;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"';

    access_log /dev/stdout main;

    server {
        listen 127.0.0.1:{{ .Values.proxy.service.ports.health.remoteContainerPort }};

        location / {
            return 404;
        }

        location /healthz {
            default_type text/plain;
            return 200 "OK\n";
        }
    }
}

stream {
    log_format main '$proxy_protocol_addr - $remote_addr [$time_local] '
                    '$protocol $status $bytes_sent $bytes_received '
                    '$session_time "$upstream_addr" '
                      '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log /dev/stdout main;

    map $ssl_preread_server_name $backend_name {
        {{ range $config := .Values.proxy.service.ports.tls.hosts }}
        {{ printf "%s %s:%d;" $config.host $config.host ($config.port | int) }}
        {{ end }}
    }

    resolver {{ printf "kube-dns.kube-system.svc.%s" .Values.clusterDomain }} valid=30s;
    resolver_timeout 5s;

    server {
        listen 127.0.0.1:{{ .Values.proxy.service.ports.tls.remoteContainerPort }} proxy_protocol;
        ssl_preread on;
        proxy_pass $backend_name;
        proxy_protocol {{ ternary "on" "off" .Values.proxy.service.ports.tls.proxyProtocolEnabled }};
    }
}
