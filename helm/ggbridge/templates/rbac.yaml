{{- if .Values.tls.certManager.rbac.create }}
  {{- $fullname := include "ggbridge.fullname" . }}
  {{- if hasKey .Values.tls.certManager.issuer.spec "vault" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ printf "%s-issuer" $fullname }}
  labels:
    {{- include "ggbridge.labels" . | nindent 4 }}
  {{- if or .Values.commonAnnotations .Values.serviceAccount.annotations }}
  {{- $annotations := include "ggbridge.tplvalues.merge" ( dict "values" ( list .Values.serviceAccount.annotations .Values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "ggbridge.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ printf "%s-issuer" $fullname }}
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: ['']
    resources: ['serviceaccounts/token']
    resourceNames: [{{ printf "%s-issuer" $fullname | quote }}]
    verbs: ['create']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ printf "%s-issuer" $fullname }}
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.tls.certManager.serviceAccount }}
    namespace: {{ .Values.tls.certManager.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ printf "%s-issuer" $fullname }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-issuer-token" $fullname }}
  annotations:
    kubernetes.io/service-account.name: {{ printf "%s-issuer" $fullname }}
type: kubernetes.io/service-account-token
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ printf "%s-cert-manager" $fullname }}
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - ''
    resources:
      - 'secrets'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
  - apiGroups:
      - 'cert-manager.io'
    resources:
      - 'certificates'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
      - 'create'
  - apiGroups:
      - 'cert-manager.io'
    resources:
      - 'issuers'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
      - 'create'
  {{- if .Values.tls.certManager.rbac.subjects }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ printf "%s-cert-manager" $fullname }}
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ printf "%s-cert-manager" $fullname }}
{{- with .Values.tls.certManager.rbac.subjects }}
subjects:
  {{- toYaml . | nindent 2 }}
{{- end }}

  {{- end }}
{{- end }}
