{{- if and (eq .Values.mode "server") (include "ggbridge.hostname" .) .Values.gateway.enabled }}
  {{- $fullname := include "ggbridge.fullname" . }}
  {{- $serverFullname := include "ggbridge.server.fullname" . }}

{{- if $.Values.gateway.gateway.create }}
  {{- if and (eq .Values.gateway.controller "traefik") .Values.tls.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: {{ $serverFullname }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ggbridge.labels" . | nindent 4 }}
    {{- include "ggbridge.server.labels" . | nindent 4 }}
spec:
  {{- if eq (lower .Values.tls.mode) "mutual" }}
  clientAuth:
    secretNames:
      - {{ printf "%s-crt" $serverFullname }}
    clientAuthType: RequireAndVerifyClientCert
  {{- end }}
  minVersion: VersionTLS12
  {{- end }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: {{ $serverFullname }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ggbridge.labels" . | nindent 4 }}
    {{- include "ggbridge.server.labels" . | nindent 4 }}
  {{- if or .Values.commonAnnotations .Values.gateway.annotations }}
  {{- $annotations := include "ggbridge.tplvalues.merge" ( dict "values" ( list .Values.gateway.annotations .Values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "ggbridge.tplvalues.render" ( dict "value" $annotations "context" .) | nindent 4 }}
  {{- end }}
spec:
  gatewayClassName: {{ .Values.gateway.gateway.className | quote }}
  listeners:
    - hostname: {{ include "ggbridge.hostname" . }}
      allowedRoutes:
        namespaces:
          from: Same
      {{- if .Values.tls.enabled }}
      name: https
      port: {{ .Values.gateway.gateway.ports.https }}
      tls:
        mode: {{ include "ggbridge.server.gateway.tlsMode" . }}
        {{- if eq (lower .Values.tls.mode) "passthrough" }}
      protocol: TLS
        {{- else }}
        certificateRefs:
          {{- if .Values.tls.existingSecret }}
          - name: {{ .Values.tls.existingSecret }}
          {{- else }}
          - name: {{ printf "%s-crt" $serverFullname }}
          {{- end }}
        options:
          gateway.istio.io/tls-terminate-mode: MUTUAL
      protocol: HTTPS
        {{- end }}
      {{- else }}
      name: http
      port: {{ .Values.gateway.gateway.ports.http }}
      protocol: HTTP
      {{- end }}
{{- end }}
---
{{- if eq (lower .Values.tls.mode) "passthrough" }}
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
{{- else }}
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
{{- end }}
metadata:
  name: {{ $serverFullname }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ggbridge.labels" . | nindent 4 }}
    {{- include "ggbridge.server.labels" . | nindent 4 }}
  {{- if or .Values.commonAnnotations .Values.gateway.annotations }}
  {{- $annotations := include "ggbridge.tplvalues.merge" ( dict "values" ( list .Values.gateway.annotations .Values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "ggbridge.tplvalues.render" ( dict "value" $annotations "context" .) | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.gateway.gateway.create }}
  parentRefs:
    - name: {{ $serverFullname }}
      namespace: {{ .Release.Namespace }}
      sectionName: {{ ternary "https" "http" .Values.tls.enabled }}
  {{- else }}
  parentRefs: {{ toYaml .Values.gateway.parentRefs | nindent 4 }}
  {{- end }}
  hostnames:
    - {{ include "ggbridge.hostname" . }}
  rules:
    - backendRefs:
        - name: {{ $serverFullname }}
          port: {{ $.Values.service.ports.ws.port }}
      {{- if ne (lower .Values.tls.mode) "passthrough" }}
      matches:
        - path:
            type: PathPrefix
            value: /
        {{- range $index := until (include "ggbridge.deploymentCount" $ | int) }}
          {{- $serverFullname := include "ggbridge.server.fullname" $ }}
          {{- $indexServerFullname := printf "%s-%d" $serverFullname ($index | int) }}
    - matches:
        - path:
            type: PathPrefix
            value: {{ printf "/%d" ($index | int) }}
      backendRefs:
        - name: {{ $indexServerFullname }}
          port: {{ $.Values.service.ports.ws.port }}
        {{- end }}
      {{- end }}
{{- end }}
