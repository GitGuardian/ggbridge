{{- if and (include "ggbridge.server.hostname" .) .Values.server.tls.enabled (not .Values.server.tls.certManager.enabled) -}}
  {{- $fullname := include "ggbridge.fullname" . }}
  {{- $serverFullname := include "ggbridge.server.fullname" . }}
  {{- $clientFullname := include "ggbridge.client.fullname" . }}
  {{- $releaseNamespace := $.Release.Namespace }}
  {{- $clusterDomain := $.Values.clusterDomain }}
  {{- $ca := dict }}
  {{- $clientCert := dict }}
  {{- if .Values.server.tls.autoGenerated }}
    {{- $caSecret := (get (lookup "v1" "Secret" $releaseNamespace (printf "%s-ca" $fullname)) "data" | default dict) }}
    {{- if $caSecret }}
      {{- $ca = buildCustomCert (get $caSecret "tls.crt") (get $caSecret "tls.key") }}
    {{- else }}
      {{- $ca = genCA $fullname 3650 }}
    {{- end }}
    {{- $clientCert = genSignedCert $clientFullname nil nil 365 $ca }}
    {{- $namespace := ternary (default .Release.namespace .Values.server.istio.gateway.namespace) .Release.namespace .Values.server.istio.enabled -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-ca" $fullname }}
  namespace: {{ $namespace }}
  labels:
    {{- include "ggbridge.labels" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "ggbridge.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $ca.Cert | b64enc }}
  tls.key: {{ $ca.Key | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-crt" $clientFullname }}
  namespace: {{ .Release.namespace }}
  labels:
    {{- include "ggbridge.labels" $ | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "ggbridge.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $clientCert.Cert | b64enc }}
  tls.key: {{ $clientCert.Key | b64enc }}
  {{- end }}

  {{- $tls := .Values.server.tls -}}
  {{- if not $tls.existingSecret }}
    {{- $namespace := ternary (default $.Release.namespace $.Values.server.istio.gateway.namespace) $.Release.namespace $.Values.server.istio.enabled -}}
    {{- $cert := dict }}
    {{- if $.Values.server.tls.autoGenerated }}
      {{- $altNames := list (printf "*.%s.%s.svc.%s" $fullname $releaseNamespace $clusterDomain) $fullname }}
      {{- $cert = genSignedCert $fullname nil $altNames 365 $ca }}
    {{- else }}
      {{- $ca = dict "Cert" $tls.caCrt }}
      {{- $cert = dict "Cert" $tls.crt "Key" $tls.key }}
    {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-crt" $serverFullname }}
  namespace: {{ $namespace }}
  labels:
    {{- include "ggbridge.labels" . | nindent 4 }}
    {{- include "ggbridge.server.labels" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "ggbridge.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" . ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $ca.Cert | b64enc }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
    {{- end }}

{{- end }}
