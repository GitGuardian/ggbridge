# Default values for ggbridge.

# -- Override the default chart name
nameOverride: ""
# -- Override the default fully qualified app name
fullnameOverride: ""

# -- Kubernetes cluster domain
clusterDomain: cluster.local

# -- Public Domain
domain: gitguardian.com

# -- Add labels to all the deployed resources
commonLabels: {}
# -- Add annotations to all the deployed resources
commonAnnotations: {}

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # -- Image registry
  registry: ghcr.io
  # -- Image repository
  repository: gitguardian/ggbridge
  # -- Image tag
  tag: ""
  # -- Image digest in the way sha256:aa....
  digest: ""

  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secrets
  pullSecrets: []

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # @ignored
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use
  name: ""

# -- This is for setting Kubernetes Annotations to a Pod
podAnnotations: {}
# -- This is for setting Kubernetes Labels to a Pod
podLabels: {}

podSecurityContext:
  # -- Enable Pod security Context in deployments
  enabled: true
  # @ignored
  fsGroupChangePolicy: Always
  # @ignored
  sysctls: []
  # @ignored
  supplementalGroups: []
  # @ignored
  fsGroup: 65532

containerSecurityContext:
  # -- Enable Container security Context in deployments
  enabled: true
  # @ignored
  seLinuxOptions: {}
  # @ignored
  runAsUser: 65532
  # @ignored
  runAsGroup: 65532
  # @ignored
  runAsNonRoot: true
  # @ignored
  privileged: false
  # @ignored
  readOnlyRootFilesystem: true
  # @ignored
  allowPrivilegeEscalation: false
  # @ignored
  capabilities:
    drop: ["ALL"]
  # @ignored
  seccompProfile:
    type: "RuntimeDefault"

# -- Set container requests and limits
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits: {}

# -- Node labels for pod assignment
nodeSelector: {}
# -- Affinity for pod assignment
affinity: {}
# -- Tolerations for pod assignment
tolerations: []
# -- Topology spread constraints for pod assignment
topologySpreadConstraints: []

# -- Deployment mode: "client" or "server"
mode: client

# -- hostname
hostname: ""
# -- subdomain
subdomain: ""

# -- Set log level
logLevel: INFO

# -- High Availability parameters
ha:
  # -- Enable High Availability architecture
  enabled: true
  # -- The number of ggbridge client/server deployments
  deploymentCount: 3

# -- Dns resolver to use to lookup ips of domain name
dnsResolver: ""
# -- Pool of open connection to the server, in order to speed up the connection process
connectionMinIdle: 0

tls:
  # -- Enable TLS traffic support
  enabled: false
  # -- TLS mode (can be "mutual" or "passthrough")
  mode: mutual
  # -- Generate automatically self-signed TLS certificates
  autoGenerated: false
  certManager:
    # -- Manage certifcates with cert-manager
    enabled: false
    # -- Cert-Manager issuer
    issuer:
      name: selfSigned
      kind: Issuer
  existingSecret: ""
  existingSecretKeys:
    # -- Existing secret key storing the Certificate Authority
    caCrt: ""
    # -- Existing secret key storing the server certificate
    crt: ""
    # -- Existing secret key storing the server certificate key
    key: ""
  # -- CA certificate in PEM format
  caCrt: ""
  # -- Server certificate in PEM format
  crt: ""
  # -- Server certificate key in PEM format
  key: ""

# -- Number of deployments
# Set to .values.ha.deploymentCount when .Values.ha.enabled
deploymentCount: 1
# -- Number of pods for each deployment
replicaCount: 1
updateStrategy:
  # -- Customize updateStrategy of Deployment
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

# -- Set server annotations
annotations: {}
# -- Set server labels
labels: {}

proxy:
  # -- Number of pods
  # Set to .values.ha.deploymentCount when .Values.ha.enabled
  replicaCount: 0
  updateStrategy:
    # -- Customize updateStrategy of Deployment
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  # -- Set proxy annotations
  annotations: {}
  # -- Set proxy labels
  labels: {}

  # -- Specify proxy Readiness Probe parameters
  readinessProbe:
    enabled: false
    exec:
      command:
        - ggbridge
        - healthcheck
        - -pid-file=/var/run/nginx.pid
        - -grace-period=60
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 1

  # -- Proxy service parameters
  service:
    # --- Override the default service name
    name: ""
    annotations: {}
    # -- Kubernetes Service type
    type: ClusterIP
    ports:
      http:
        port: 80
        containerPort: 8080
      socks:
        port: 1080
        containerPort: 1080

  # -- Network Policy parameters
  networkPolicy:
    # -- Specifies whether a NetworkPolicy should be created
    enabled: true
    # -- When true, server will accept connections from any source
    allowExternal: true
    # -- Add extra ingress rules to the NetworkPolicy
    extraIngress: []
    # -- Add extra egress rules to the NetworkPolicy
    extraEgress: []
    # -- Labels to match to allow traffic to the proxy server from other namespaces
    ingressNSMatchLabels: {}
    # -- Pod labels to match to allow traffic to the proxy server from other namespaces
    ingressNSPodMatchLabels: {}

# -- Services parameters
service:
  annotations: {}
  # -- Kubernetes Service type
  type: ClusterIP
  ports:
    ws:
      port: 8000
      containerPort: 8000

# -- Pod Disruption Budget parameters
pdb:
  # -- Enable/disable a Pod Disruption Budget creation
  create: true
  # -- Minimum number of pods that must still be available after the eviction
  minAvailable: 1
  # -- Max number of pods that can be unavailable after the eviction
  maxUnavailable: ""

# -- Network Policy parameters
networkPolicy:
  # -- Specifies whether a NetworkPolicy should be created
  enabled: true
  # -- When true, server will accept connections from any source
  allowExternal: true
  # -- Add extra ingress rules to the NetworkPolicy
  extraIngress: []
  # -- Add extra egress rules to the NetworkPolicy
  extraEgress: []
  # -- Labels to match to allow traffic to the proxy server from other namespaces
  ingressNSMatchLabels: {}
  # -- Pod labels to match to allow traffic to the proxy server from other namespaces
  ingressNSPodMatchLabels: {}

# -- RBAC parameters
rbac:
  # -- CertManager role
  certManager:
    # -- Whether to create & use certManager RBAC resources or not
    create: false
    # -- Grants certManager permissions to the sepcfied subjects
    subjects: []
      # - kind: ServiceAccount
      #   name: gim
      #   namespace: gim

# -- Configure the ingress resources that allows you to connect to the server
ingress:
  # -- Enable server exposure using Kubernetes Ingress API
  enabled: false
  # -- Specify the ingress controller
  controller: ""
  # -- Set the ingress ClassName
  className: ""
  # -- Set ingress annotations
  annotations: {}

# -- Configure the gateway resources that allows you to connect to the server
gateway:
  # -- Enable server exposure using Kubernetes Gateway API
  enabled: false
  # -- Specify the gateway controller
  controller: ""
  # -- Set the gateway ClassName
  className: ""
  gateway:
    # -- Specifies whether a Gateway resource should be created alongside the routing resource (HTTPRoute)
    create: true
    # -- Set the  gatewayClassName
    className: ""
    # -- Specify Gateway ports number
    ports:
      http: 80
      https: 443
  # -- Specify the existing gateway resources
  parentRefs: []
  # -- Set gateway annotations
  annotations: {}

# -- Configure the istio resources that allows you to connect to the server
istio:
  # -- Enable server exposure using Istio ingress
  enabled: false
  gateway:
    # -- Specifies whether an Istio Gateway resource should be created alongside the Virtual Service
    create: true
    # -- Specify the gateway namespace
    namespace: ""
    # -- Set Istio Gateway selector
    selector:
      istio: ingress
    # -- Specify Istio Gateway ports number
    ports:
      http: 80
      https: 443
    # -- Specify Gateway TLS options
    tls:
      # -- Set the exising TLS secret
      credentialName: ""
      minProtocolVersion: TLSV1_2
  # -- Specify the existing gateway resources for Virtual Service
  gateways: []
  # -- Set Istio annotations
  annotations: {}
