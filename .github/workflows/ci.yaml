name: CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths-ignore:
      - 'demo/**'
      - 'docs/**'
      - 'examples/**'
      - 'LICENSE'
      - 'README.md'
  workflow_dispatch:
    inputs:
      runner:
        description: "Specify the runner to use"
        required: true
        default: "ubuntu-latest"

permissions:
  actions: read
  attestations: write
  contents: read
  id-token: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  docker:
    name: Build and Scan Docker image
    runs-on: ${{ github.event_name == 'workflow_dispatch' && inputs.runner || 'ubuntu-latest' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get GitHub vars
        id: github
        uses: ./.github/actions/github

      - name: Build APK packages
        id: apk
        uses: ./.github/actions/melange/build
        with:
          arch: ${{ steps.github.outputs.arch }}

      - name: Build Docker images
        id: docker
        uses: ./.github/actions/apko/build
        with:
          repository: ${{ steps.apk.outputs.output-dir }}
          key: ${{ steps.apk.outputs.public-key }}
          arch: ${{ steps.github.outputs.arch }}

      - name: Scan vulnerabilities
        id: scan
        uses: ./.github/actions/scan-directory
        with:
          # Scan prod variant
          source: ${{ steps.docker.outputs.output-dir }}/prod
          fail-on: high

  helm:
    name: Test Helm chart
    runs-on: ${{ github.event_name == 'workflow_dispatch' && inputs.runner || 'ubuntu-latest' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test Helm chart
        uses: ./.github/actions/helm/test
