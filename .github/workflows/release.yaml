name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

env:
  DAGGER_VERSION: '0.15.4'

jobs:
  docker:
    if: startsWith(github.event.ref, 'refs/tags/v')

    name: Publish Docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get GitHub vars
        id: github
        uses: ./.github/actions/github

      - name: Build APK packages
        id: apk
        uses: ./.github/actions/melange/build
        with:
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Publish prod image
        id: publish-prod
        uses: ./.github/actions/apko/publish
        with:
          config: 'apko/prod.yaml'
          tag: '${{ steps.github.outputs.repository }}:${{ steps.github.outputs.version }}'
          repository-append: ${{ steps.apk.outputs.output-dir }}
          keyring-append: ${{ steps.apk.outputs.public-key }}
          dockerhub-username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Tag shell prod image as latest
        uses: ./.github/actions/crane/tag
        with:
          image: '${{ steps.github.outputs.repository }}:${{ steps.github.outputs.version }}'
          tag: latest
          dockerhub-username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Sign prod image
        id: sign-prod
        uses: ./.github/actions/cosign/sign
        with:
          image: '${{ steps.github.outputs.repository }}@${{ steps.publish-prod.outputs.digest }}'
          dockerhub-username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          cosign-password: ${{ secrets.COSIGN_PASSWORD }}
          cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Publish shell images
        id: publish-shell
        uses: ./.github/actions/apko/publish
        with:
          config: 'apko/shell.yaml'
          tag: '${{ steps.github.outputs.repository }}:${{ steps.github.outputs.version }}-shell'
          repository-append: ${{ steps.apk.outputs.output-dir }}
          keyring-append: ${{ steps.apk.outputs.public-key }}
          dockerhub-username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Tag shell shell image as latest
        uses: ./.github/actions/crane/tag
        with:
          image: '${{ steps.github.outputs.repository }}:${{ steps.github.outputs.version }}-shell'
          tag: latest-shell
          dockerhub-username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Sign shell image
        id: sign-shell
        uses: ./.github/actions/cosign/sign
        with:
          image: '${{ steps.github.outputs.repository }}@${{ steps.publish-shell.outputs.digest }}'
          dockerhub-username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          cosign-password: ${{ secrets.COSIGN_PASSWORD }}
          cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Scan vulnerabilities
        id: scan
        uses: ./.github/actions/scan
        with:
          source: 'ghcr.io/${{ steps.github.outputs.repository }}:${{ steps.github.outputs.version }}'
          severity-cutoff: high
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

  helm:
    if: startsWith(github.event.ref, 'refs/tags/v')

    name: Publish Helm Chart
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get GitHub vars
        id: github
        uses: ./.github/actions/github

      - name: Test Helm chart
        uses: ./.github/actions/helm/test
        with:
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

      - name: Publish Helm chart
        uses: ./.github/actions/helm/publish
        with:
          registry: ghcr.io/${{ steps.github.outputs.repository }}/helm
          version: ${{ steps.github.outputs.version }}
          app-version: ${{ steps.github.outputs.version }}
          dagger-version: ${{ env.DAGGER_VERSION }}
          dagger-cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
